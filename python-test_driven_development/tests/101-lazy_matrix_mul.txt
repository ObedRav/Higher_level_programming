Matrix Mul - multiplies two matrices
================================================================

This function calculates the product of two matrices, m_a and m_b,
using NumPy's np.matmul function.
It assumes that the input matrices are valid and will not perform
any checks to ensure they are.

Args:
    matrix1 (List[List[int]]): The first matrix to be multiplied.
    matrix2 (List[List[int]]): The second matrix to be multiplied.

Returns:
    new_matrix: The product of m_a and m_b, as a NumPy array.

Raises:
    TypeError: If the two matrices are not lists of lists of integers.
    ValueError: If the two matrices can not be multiplied.

Examples:

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> import numpy as np

>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[2, 0], [1, 2]]
>>> np.array_equal(lazy_matrix_mul(m_a, m_b), np.matmul(m_a, m_b))
True

>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> m_b = [[2, 0], [1, 2], [3, 4]]
>>> np.array_equal(lazy_matrix_mul(m_a, m_b), np.matmul(m_a, m_b))
True

>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [1, 2]
>>> lazy_matrix_mul(m_a, m_b)
array([ 5, 11])

>>> lazy_matrix_mul([1,2])
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

>>> lazy_matrix_mul()
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'